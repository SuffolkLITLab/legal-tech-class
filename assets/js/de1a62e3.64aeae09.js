"use strict";(self.webpackChunkopen_class=self.webpackChunkopen_class||[]).push([[451],{4615:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(5893),s=t(1151);const i={slug:"jinja2",title:"The Jinja2 Templating Language",sidebar_label:"Jinja2"},l=void 0,o={id:"jinja2",title:"The Jinja2 Templating Language",description:"Jinja2 plays the same role inside Microsoft Word docx templates that",source:"@site/docs/jinja2.md",sourceDirName:".",slug:"/jinja2",permalink:"/legal-tech-class/docs/jinja2",draft:!1,unlisted:!1,editUrl:"https://github.com/suffolklitlab/legal-tech-class/edit/master/class/docs/jinja2.md",tags:[],version:"current",frontMatter:{slug:"jinja2",title:"The Jinja2 Templating Language",sidebar_label:"Jinja2"},sidebar:"someSidebar",previous:{title:"Python basics",permalink:"/legal-tech-class/docs/python"},next:{title:"Object Oriented Programming",permalink:"/legal-tech-class/docs/practical-guide-docassemble/object-oriented-programming"}},r={},c=[{value:"Insert variables",id:"insert-variables",level:2},{value:"Use conditional text",id:"use-conditional-text",level:2},{value:"In-line conditional statements",id:"in-line-conditional-statements",level:3},{value:"Paragraph-level conditional statements",id:"paragraph-level-conditional-statements",level:3},{value:"Use control structures",id:"use-control-structures",level:2},{value:"Further reading",id:"further-reading",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Jinja2 plays the same role inside Microsoft Word docx templates that\n",(0,a.jsx)(n.a,{href:"/legal-tech-class/docs/mako",children:"Mako"})," plays inside the interview file."]}),"\n",(0,a.jsxs)(n.p,{children:["Jinja was originally created as a ",(0,a.jsx)(n.a,{href:"https://jinja.palletsprojects.com/en/2.9.x/",children:"templating language for Django"}),".\nDocassemble's version of Jinja is not quite the same; it's a variation built for\n",(0,a.jsx)(n.a,{href:"https://docxtpl.readthedocs.io/en/latest/",children:"docx-template"}),". It's useful to keep this in mind if you are\ntrying to use an advanced feature and find that it doesn't work."]}),"\n",(0,a.jsx)(n.p,{children:"Jinja statements allow you to:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Insert variables"}),"\n",(0,a.jsx)(n.li,{children:"Use conditional text"}),"\n",(0,a.jsx)(n.li,{children:"Use control structures to display repeated variables"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"insert-variables",children:"Insert variables"}),"\n",(0,a.jsxs)(n.p,{children:["To insert a variable into your document, surround it with double curly braces, like this: ",(0,a.jsx)(n.code,{children:"{{ variable_name }}"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["It's also possible to include Python code in the place of the variable name. For example, if you had\nassigned the value of ",(0,a.jsx)(n.code,{children:"my_variable"})," as below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'my_variable = "lowercase name"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Then you could use the ",(0,a.jsx)(n.code,{children:".capitalize()"})," ",(0,a.jsx)(n.a,{href:"https://docs.python.org/2.5/lib/string-methods.html",children:"method of a string"}),"\ninside Jinja tags to make sure that it started with a capital letter, regardless of how the user entered it inside\nyour application:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jinja",children:"Dear {{ my_variable.capitalize() }}:\n\n    I am writing to tell you...\n"})}),"\n",(0,a.jsx)(n.h2,{id:"use-conditional-text",children:"Use conditional text"}),"\n",(0,a.jsx)(n.p,{children:"One of the most common uses of Jinja tags inside a docx template is to insert conditional text. There are two types\nof conditionals: in-line, and paragraph/bullet level conditionals."}),"\n",(0,a.jsx)(n.h3,{id:"in-line-conditional-statements",children:"In-line conditional statements"}),"\n",(0,a.jsxs)(n.p,{children:["Jinja in-line conditionals are started with a curly brace and a % symbol, like ",(0,a.jsx)(n.code,{children:"{% if condition %}"})," and closed with ",(0,a.jsx)(n.code,{children:"{% endif %}"}),". You can optionally include both ",(0,a.jsx)(n.code,{children:"{% elif %}"})," and ",(0,a.jsx)(n.code,{children:"{% else %}"})," tags."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jinja",children:"You are {% if person.age_in_years() < 13 %} a child {% elif person.age_in_years() < 20 %} a teenager {% else %} an adult. {% endif %}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"paragraph-level-conditional-statements",children:"Paragraph-level conditional statements"}),"\n",(0,a.jsxs)(n.p,{children:["Sometimes you want to hide an entire paragraph if a certain condition is met. One time you may want to use this when several optional items are shown on a list. In this case, you use a slight variation: ",(0,a.jsx)(n.code,{children:"{%p if... %}"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jinja",children:"* Apple\n* {%p if likes_bananas %}\n* Bananas\n* {%p endif %}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If you leave out the ",(0,a.jsx)(n.code,{children:"p"}),", you would have an empty line after ",(0,a.jsx)(n.code,{children:"Apple"}),". Using ",(0,a.jsx)(n.code,{children:"p"})," tells Docassemble to remove that line from the document."]}),"\n",(0,a.jsxs)(n.p,{children:["Make sure you use the ",(0,a.jsx)(n.code,{children:"{%p endif %}"})," form to close the statement. Otherwise, Docassemble will raise an error that there is an unmatched if statement."]}),"\n",(0,a.jsx)(n.h2,{id:"use-control-structures",children:"Use control structures"}),"\n",(0,a.jsxs)(n.p,{children:["Control structures use the same syntax as conditional statements, surrounded by ",(0,a.jsx)(n.code,{children:"{% %}"})," or ",(0,a.jsx)(n.code,{children:"{%p %}"}),". You can use the same control structures (",(0,a.jsx)(n.code,{children:"for"})," and ",(0,a.jsx)(n.code,{children:"while"}),") in Jinja that you can use in Python and wherever you can use Mako statements."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jinja",children:"{%p for fruit in fruits %}\n* {{ fruit }}\n{%p endfor %}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docassemble.org/docs/documents.html#docx%20template%20file",children:"https://docassemble.org/docs/documents.html#docx%20template%20file"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var a=t(7294);const s={},i=a.createContext(s);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);