"use strict";(self.webpackChunkopen_class=self.webpackChunkopen_class||[]).push([[538],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||s;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<s;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7871:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var o=n(2122),r=n(9756),s=(n(7294),n(3905)),a=["components"],i={slug:"question-types",title:"Question Types",sidebar_label:"Question Types"},l=void 0,u={unversionedId:"classes/docacon-2020/question-types",id:"classes/docacon-2020/question-types",isDocsHomePage:!1,title:"Question Types",description:"So far we've only looked at one type of question - single text. Docassemble",source:"@site/docs/classes/docacon-2020/question-types.md",sourceDirName:"classes/docacon-2020",slug:"/classes/docacon-2020/question-types",permalink:"/legal-tech-class/docs/classes/docacon-2020/question-types",editUrl:"https://github.com/suffolklitlab/legal-tech-class/edit/master/class/docs/classes/docacon-2020/question-types.md",version:"current",frontMatter:{slug:"question-types",title:"Question Types",sidebar_label:"Question Types"},sidebar:"someSidebar",previous:{title:"Logic",permalink:"/legal-tech-class/docs/classes/docacon-2020/logic"},next:{title:"Customizing Appearance",permalink:"/legal-tech-class/docs/classes/docacon-2020/customizing-appearance"}},c=[{value:"The example block is your friend",id:"the-example-block-is-your-friend",children:[{value:"Using multiple fields in the same question",id:"using-multiple-fields-in-the-same-question",children:[]},{value:"Restricting the user to a specific type of answer",id:"restricting-the-user-to-a-specific-type-of-answer",children:[]},{value:"Creating true-false questions",id:"creating-true-false-questions",children:[]},{value:"Multiple choice questions",id:"multiple-choice-questions",children:[]}]},{value:"Your assignment",id:"your-assignment",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,s.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"So far we've only looked at one type of question - single text. Docassemble\ncomes pre-loaded with many different question types that give you options\non how to ask users for information, as well as how to present options to\nyour users. "),(0,s.kt)("h2",{id:"the-example-block-is-your-friend"},"The example block is your friend"),(0,s.kt)("p",null,"At the bottom of the Playground there's a segment called ",(0,s.kt)("inlineCode",{parentName:"p"},"Example blocks"),".\nThis many examples of common structures and methods used in creating\nDocassemble interviews, and is the best reference guide for starting out,\nand even if you've been using Docassemble for a while. "),(0,s.kt)("h3",{id:"using-multiple-fields-in-the-same-question"},"Using multiple fields in the same question"),(0,s.kt)("p",null,"What if we want to ask the user for multiple pieces of information using only\na single question?"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What are your favorite things to eat?\nsubquestion: |\n  Please be specific.\nfields:\n  - Vegetable: fav_veggie\n  - Fruit: fav_fruit\n  - Mineral: fav_mineral\n")),(0,s.kt)("h3",{id:"restricting-the-user-to-a-specific-type-of-answer"},"Restricting the user to a specific type of answer"),(0,s.kt)("p",null,"What if we want the user to only answer with a number, a date, or an email address?\nUse the ",(0,s.kt)("inlineCode",{parentName:"p"},"datatype")," specifier:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  Please answer my questions:\nsubquestion: |\n  Please be specific.\nfields:\n  - Dollar value: big_bucks\n    datatype: currency\n  - Favorite round number: big_number\n    datatype: integer\n  - Favorite decimal number: deci_number\n    datatype: number\n  - Your birthday: user_bday\n    datatype: date\n  - Your email: user_email\n    datatype: email\n")),(0,s.kt)("h3",{id:"creating-true-false-questions"},"Creating true-false questions"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"yesno")," question type is an easy way to have users set a\nvariable to true or false:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  Are you at least 18 years of age?\nyesno: over_eighteen\n")),(0,s.kt)("h3",{id:"multiple-choice-questions"},"Multiple choice questions"),(0,s.kt)("p",null,"Docassemble gives you different ways to present multiple choice questions. "),(0,s.kt)("p",null,"Radio buttons:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What type of shoes do you wear?\nfield: target_variable\nchoices:\n  - Sneakers\n  - Sandals\n  - Clogs\n  - Other\n")),(0,s.kt)("p",null,"Dropdown:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What type of shoes do you wear?\nfield: target_variable\ndropdown:\n  - Sneakers\n  - Sandals\n  - Clogs\n  - Other\n")),(0,s.kt)("p",null,"Combobox:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What is your favorite color?\nfields:\n  - Color: favorite_color\n    input type: combobox\n    choices: \n      - Red\n      - Green\n      - Purple\n")),(0,s.kt)("h2",{id:"your-assignment"},"Your assignment"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Modify your Hello, World exercise so that it uses three different question types.")),(0,s.kt)("p",null,"Sam Harden, June 2020"))}d.isMDXComponent=!0}}]);