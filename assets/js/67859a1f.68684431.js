"use strict";(self.webpackChunkopen_class=self.webpackChunkopen_class||[]).push([[538],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(f,r(r({ref:n},c),{},{components:t})):a.createElement(f,r({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7233:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=t(7462),o=t(3366),i=(t(7294),t(3905)),r=["components"],l={slug:"question-types",title:"Question Types",sidebar_label:"Question Types"},s=void 0,u={unversionedId:"classes/docacon-2020/question-types",id:"classes/docacon-2020/question-types",title:"Question Types",description:"So far we've only looked at one type of question - single text. Docassemble",source:"@site/docs/classes/docacon-2020/question-types.md",sourceDirName:"classes/docacon-2020",slug:"/classes/docacon-2020/question-types",permalink:"/legal-tech-class/docs/classes/docacon-2020/question-types",draft:!1,editUrl:"https://github.com/suffolklitlab/legal-tech-class/edit/master/class/docs/classes/docacon-2020/question-types.md",tags:[],version:"current",frontMatter:{slug:"question-types",title:"Question Types",sidebar_label:"Question Types"},sidebar:"someSidebar",previous:{title:"Logic",permalink:"/legal-tech-class/docs/classes/docacon-2020/logic"},next:{title:"Customizing Appearance",permalink:"/legal-tech-class/docs/classes/docacon-2020/customizing-appearance"}},c={},d=[{value:"The example block is your friend",id:"the-example-block-is-your-friend",level:2},{value:"Using multiple fields in the same question",id:"using-multiple-fields-in-the-same-question",level:3},{value:"Restricting the user to a specific type of answer",id:"restricting-the-user-to-a-specific-type-of-answer",level:3},{value:"Creating true-false questions",id:"creating-true-false-questions",level:3},{value:"Multiple choice questions",id:"multiple-choice-questions",level:3},{value:"Showing the user more than one screen",id:"showing-the-user-more-than-one-screen",level:3},{value:"It&#39;s not enough to add another <code>mandatory</code> block",id:"its-not-enough-to-add-another-mandatory-block",level:4},{value:"Adding an invisible field to get Docassemble to display a <code>continue</code> button",id:"adding-an-invisible-field-to-get-docassemble-to-display-a-continue-button",level:4},{value:"Using an &quot;interview order&quot; <code>code</code> block instead",id:"using-an-interview-order-code-block-instead",level:4},{value:"Learn more",id:"learn-more",level:4},{value:"Your assignment",id:"your-assignment",level:2}],p={toc:d};function m(e){var n=e.components,t=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"So far we've only looked at one type of question - single text. Docassemble\ncomes pre-loaded with many different question types that give you options\non how to ask users for information, as well as how to present options to\nyour users. "),(0,i.kt)("h2",{id:"the-example-block-is-your-friend"},"The example block is your friend"),(0,i.kt)("p",null,"At the bottom of the Playground there's a segment called ",(0,i.kt)("inlineCode",{parentName:"p"},"Example blocks"),".\nThis many examples of common structures and methods used in creating\nDocassemble interviews, and is the best reference guide for starting out,\nand even if you've been using Docassemble for a while. "),(0,i.kt)("h3",{id:"using-multiple-fields-in-the-same-question"},"Using multiple fields in the same question"),(0,i.kt)("p",null,"What if we want to ask the user for multiple pieces of information using only\na single question?"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What are your favorite things to eat?\nsubquestion: |\n  Please be specific.\nfields:\n  - Vegetable: fav_veggie\n  - Fruit: fav_fruit\n  - Mineral: fav_mineral\n")),(0,i.kt)("h3",{id:"restricting-the-user-to-a-specific-type-of-answer"},"Restricting the user to a specific type of answer"),(0,i.kt)("p",null,"What if we want the user to only answer with a number, a date, or an email address?\nUse the ",(0,i.kt)("inlineCode",{parentName:"p"},"datatype")," specifier:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  Please answer my questions:\nsubquestion: |\n  Please be specific.\nfields:\n  - Dollar value: big_bucks\n    datatype: currency\n  - Favorite round number: big_number\n    datatype: integer\n  - Favorite decimal number: deci_number\n    datatype: number\n  - Your birthday: user_bday\n    datatype: date\n  - Your email: user_email\n    datatype: email\n")),(0,i.kt)("h3",{id:"creating-true-false-questions"},"Creating true-false questions"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"yesno")," question type is an easy way to have users set a\nvariable to true or false:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  Are you at least 18 years of age?\nyesno: over_eighteen\n")),(0,i.kt)("h3",{id:"multiple-choice-questions"},"Multiple choice questions"),(0,i.kt)("p",null,"Docassemble gives you different ways to present multiple choice questions. "),(0,i.kt)("p",null,"Radio buttons:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What type of shoes do you wear?\nfield: target_variable\nchoices:\n  - Sneakers\n  - Sandals\n  - Clogs\n  - Other\n")),(0,i.kt)("p",null,"Dropdown:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What type of shoes do you wear?\nfield: target_variable\ndropdown:\n  - Sneakers\n  - Sandals\n  - Clogs\n  - Other\n")),(0,i.kt)("p",null,"Combobox:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: |\n  What is your favorite color?\nfields:\n  - Color: favorite_color\n    input type: combobox\n    choices: \n      - Red\n      - Green\n      - Purple\n")),(0,i.kt)("h3",{id:"showing-the-user-more-than-one-screen"},"Showing the user more than one screen"),(0,i.kt)("p",null,"If you would like the user to see more than one screen in your interview,\nyou need to:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Make sure the screen is itself ",(0,i.kt)("inlineCode",{parentName:"li"},"mandatory")," or required by a ",(0,i.kt)("inlineCode",{parentName:"li"},"mandatory")," block"),(0,i.kt)("li",{parentName:"ol"},"Make sure that the user can ",(0,i.kt)("strong",{parentName:"li"},"reach")," the screen (that is, it's not blocked by another screen)")),(0,i.kt)("h4",{id:"its-not-enough-to-add-another-mandatory-block"},"It's not enough to add another ",(0,i.kt)("inlineCode",{parentName:"h4"},"mandatory")," block"),(0,i.kt)("p",null,"In the ",(0,i.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/classes/docacon-2020/hello-world"},"Hello, World")," exercise, we used a single ",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory: True"),"\non the final screen of the interview. If we want to display another screen after the\n",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory: True")," screen, our first guess might be to add another block with ",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory: True"),", like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"mandatory: True\nquestion: |\n  Hello, World!\n---\nmandatory: True\nquestion: |\n  It's a beautiful day today!\n")),(0,i.kt)("p",null,'The problem is that the "Hello, World!" screen doesn\'t have a ',(0,i.kt)("inlineCode",{parentName:"p"},"continue")," button.\nDocassemble only displays a ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," button if the question sets the value of\na variable."),(0,i.kt)("h4",{id:"adding-an-invisible-field-to-get-docassemble-to-display-a-continue-button"},"Adding an invisible field to get Docassemble to display a ",(0,i.kt)("inlineCode",{parentName:"h4"},"continue")," button"),(0,i.kt)("p",null,"If we want to display a ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," button to a screen that doesn't ask any fields,\nwe can add the ",(0,i.kt)("inlineCode",{parentName:"p"},"continue button field")," modifier, like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"mandatory: True\nquestion: |\n  Hello, World!\ncontinue button field: hello_screen_1\n---\nmandatory: True\nquestion: |\n  It's a beautiful day today!\n")),(0,i.kt)("p",null,'The first "Hello, World!" screen will set the value of ',(0,i.kt)("inlineCode",{parentName:"p"},"hello_screen_1")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"True"),"\nwhen the ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," button is pressed."),(0,i.kt)("h4",{id:"using-an-interview-order-code-block-instead"},'Using an "interview order" ',(0,i.kt)("inlineCode",{parentName:"h4"},"code")," block instead"),(0,i.kt)("p",null,"While using more than one ",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory")," block is fine for a short interview, it can get\nconfusing fast in a longer interview. Instead, we recommend using a single\n",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory")," block in each interview. To do this, we can use a mandatory ",(0,i.kt)("inlineCode",{parentName:"p"},"code")," block\nthat mentions a variable on each screen we want to display."),(0,i.kt)("p",null,"We will use the name of:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"field")," if the question asks for a field."),(0,i.kt)("li",{parentName:"ul"},"A ",(0,i.kt)("inlineCode",{parentName:"li"},"continue button field")," if the question is only informational and doesn't ask a question"),(0,i.kt)("li",{parentName:"ul"},"An ",(0,i.kt)("inlineCode",{parentName:"li"},"event")," for an ending screen that doesn't have a ",(0,i.kt)("inlineCode",{parentName:"li"},"continue")," button")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"mandatory: True\ncomment: |\n  This is an interview order block\ncode: |\n  user_name\n  hello_screen_1\n  ending_screen\n---\nquestion: |\n  What is your name?\nfields:\n  - Your name: user_name\n---\nquestion: |\n  Hello, ${ user_name }!\ncontinue button field: hello_screen_1\n---\nevent: ending_screen\nquestion: |\n  It's a beautiful day today!\n")),(0,i.kt)("h4",{id:"learn-more"},"Learn more"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/practical-guide-docassemble/controlling-interview-order"},"Read more about controlling interview order"),"."),(0,i.kt)("h2",{id:"your-assignment"},"Your assignment"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Modify your Hello, World exercise so that it uses three different question types. You can use the ",(0,i.kt)("inlineCode",{parentName:"li"},"continue button field"),' modifier if you want to display the "Hello, World" question first.')),(0,i.kt)("p",null,"Sam Harden, June 2020"))}m.isMDXComponent=!0}}]);