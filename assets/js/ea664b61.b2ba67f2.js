"use strict";(self.webpackChunkopen_class=self.webpackChunkopen_class||[]).push([[6305],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=i,h=d["".concat(l,".").concat(p)]||d[p]||m[p]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function p(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1043:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=n(4996),s=["components"],l={id:"2020-law-smart-machines-assignment-1",slug:"2020-law-smart-machines-assignment-1",title:"Assignment 1",sidebar_label:"Assignment 1"},c=void 0,u={unversionedId:"classes/smart-machines/2020/2020-law-smart-machines-assignment-1",id:"classes/smart-machines/2020/2020-law-smart-machines-assignment-1",title:"Assignment 1",description:"Before you get started",source:"@site/docs/classes/smart-machines/2020/2020-law-smart-machines-assignment-1.md",sourceDirName:"classes/smart-machines/2020",slug:"/classes/smart-machines/2020/2020-law-smart-machines-assignment-1",permalink:"/legal-tech-class/docs/classes/smart-machines/2020/2020-law-smart-machines-assignment-1",draft:!1,editUrl:"https://github.com/suffolklitlab/legal-tech-class/edit/master/class/docs/classes/smart-machines/2020/2020-law-smart-machines-assignment-1.md",tags:[],version:"current",sidebarPosition:2020,frontMatter:{id:"2020-law-smart-machines-assignment-1",slug:"2020-law-smart-machines-assignment-1",title:"Assignment 1",sidebar_label:"Assignment 1"},sidebar:"someSidebar",previous:{title:"Project Ideas",permalink:"/legal-tech-class/docs/classes/smart-machines/2020/project-ideas"},next:{title:"Assignment 2",permalink:"/legal-tech-class/docs/classes/smart-machines/2020/2020-law-smart-machines-assignment-2"}},m={},d=[{value:"Before you get started",id:"before-you-get-started",level:2},{value:"Introduction to the Docassemble Playground",id:"introduction-to-the-docassemble-playground",level:2},{value:"Hello, World",id:"hello-world",level:2},{value:"Baby steps",id:"baby-steps",level:3},{value:"The mandatory specifier",id:"the-mandatory-specifier",level:3},{value:"Introducing variables",id:"introducing-variables",level:3},{value:"Introducing logic",id:"introducing-logic",level:3},{value:"Your assignment",id:"your-assignment",level:2},{value:"Turning in your work",id:"turning-in-your-work",level:2}],p={toc:d};function h(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"before-you-get-started"},"Before you get started"),(0,r.kt)("p",null,"We will discuss the first few sections of this assignment in class. To refresh your memory and reflect on your own, I recommend skimming the Overview of Docassemble, Description of ",(0,r.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/yaml"},"YAML"),", and the section describing ",(0,r.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/mako"},"Mako"),". If you run into any trouble, please ask for help on the class Slack channel."),(0,r.kt)("h2",{id:"introduction-to-the-docassemble-playground"},"Introduction to the Docassemble Playground"),(0,r.kt)("p",null,"We will use the Docassemble playground for all exercises. Log in to the Docassemble server at ",(0,r.kt)("a",{parentName:"p",href:"https://interviews.lemmalegal.com."},"https://interviews.lemmalegal.com.")," When you are loggged in, click on your name, and then select the Playground option to reach the Playground."),(0,r.kt)("img",{alt:"Overview of the Docassemble Playground",src:(0,o.Z)("img/playground_window.png")}),(0,r.kt)("p",null,"The Playground is made up of several elements."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The main text editing window"),(0,r.kt)("li",{parentName:"ol"},"A list of example blocks that can be directly inserted into the text editing window"),(0,r.kt)("li",{parentName:"ol"},"A list of variables and functions available in the current interview file"),(0,r.kt)("li",{parentName:"ol"},"The save and run button, used to run the interview and view results."),(0,r.kt)("li",{parentName:"ol"},"The share button which also gives you a link that can be shared ")),(0,r.kt)("h2",{id:"hello-world"},"Hello, World"),(0,r.kt)("p",null,"In computer programming, the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/%22Hello,_World!%22_program"},"traditional first exercise"),' in a new programming language is to display the text "Hello, World."'),(0,r.kt)("h3",{id:"baby-steps"},"Baby steps"),(0,r.kt)("p",null,"Let's erase the text in the playground and replace it with the text below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Hello, World\n")),(0,r.kt)("p",null,"Docassemble interviews contain a series of ",(0,r.kt)("inlineCode",{parentName:"p"},"specifiers")," followed by text, such as the ",(0,r.kt)("inlineCode",{parentName:"p"},"question")," specifier. The ",(0,r.kt)("inlineCode",{parentName:"p"},"question")," specifier tells docassemble that what follows will be the title of a screen displayed to the user."),(0,r.kt)("p",null,"When you save and then run this sample, you will notice an error."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Error\nDocassemble has finished executing all code blocks marked as initial or mandatory, and finished asking all questions marked as mandatory (if any). It is a best practice to end your interview with a question that says goodbye and offers an Exit button.\n")),(0,r.kt)("h3",{id:"the-mandatory-specifier"},"The mandatory specifier"),(0,r.kt)("p",null,"Take a minute to read the error message. In Docassemble, your interview can contain many questions and branches that are never shown to the user. This error is telling us that ",(0,r.kt)("em",{parentName:"p"},"none")," of the questions are marked as ",(0,r.kt)("inlineCode",{parentName:"p"},"mandatory"),", or required, so Docassemble doesn't know what to display. Let's fix that."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Hello, World\nmandatory: True\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mandatory"),' specifier marks this block as required. Now when we run the interview, we\'ll see the text "Hello, World" on the screen without any errors.'),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note"),": you should normally have only ONE ",(0,r.kt)("inlineCode",{parentName:"p"},"mandatory")," block in a single interview. We'll discuss good practices around this later.")),(0,r.kt)("h3",{id:"introducing-variables"},"Introducing variables"),(0,r.kt)("p",null,"The purpose of Docassemble is to gather information from the users. Let's ask the user's name so we can greet them personally."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Hello, ${user_name}\nmandatory: True\n---\nquestion: What is your name?\nfields:\n  - Name: user_name\n")),(0,r.kt)("p",null,"We introduced several new ideas in this interview. Notice that each screen in the interview is separated by three dashes, like this: ",(0,r.kt)("inlineCode",{parentName:"p"},"---"),"."),(0,r.kt)("p",null,"We introduced a new ",(0,r.kt)("inlineCode",{parentName:"p"},"specifier"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"fields"),". Instead of single line of text, this ",(0,r.kt)("inlineCode",{parentName:"p"},"specifier")," takes a list. Each field in the list is indented and begins with a single dash, like this: ",(0,r.kt)("inlineCode",{parentName:"p"},"-"),". Each item has a label, followed by a colon, followed by the name of the variable that the user's input will be assigned to."),(0,r.kt)("p",null,"To learn more about the format of a Docassemble interview, read the section on the ",(0,r.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/yaml"},"YAML format"),"."),(0,r.kt)("p",null,"We also introduced ",(0,r.kt)("inlineCode",{parentName:"p"},"variables"),". A variable is simply a placeholder. ",(0,r.kt)("inlineCode",{parentName:"p"},"user_name")," is a variable that is a placeholder for the user's name. Inside the Docassemble interview, we can display a variable by surrounding it with ",(0,r.kt)("inlineCode",{parentName:"p"},"Mako")," tags, like this: ",(0,r.kt)("inlineCode",{parentName:"p"},"${variable_name}"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note"),": We don't need to tell Docassemble to mark the second question as mandatory. Because the mandatory question requires the variable ",(0,r.kt)("inlineCode",{parentName:"p"},"user_name"),", Docassemble automatically asks the first question that provides a definition.")),(0,r.kt)("h3",{id:"introducing-logic"},"Introducing logic"),(0,r.kt)("p",null,"Docassemble uses ",(0,r.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/mako"},"Mako")," tags to control displaying variables and basic logic inside the interview file. Let's try out using an ",(0,r.kt)("inlineCode",{parentName:"p"},"if")," statement: the most basic building block of logic."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Hello, ${user_name}\nsubquestion: |\n  % if user_name == 'Bob':\n  My uncle's name is Bob too!\n  % endif\nmandatory: True\n---\nquestion: What is your name?\nfields:\n  - Name: user_name\n")),(0,r.kt)("p",null,"In this iteration, we introduce the ",(0,r.kt)("inlineCode",{parentName:"p"},"line continuation")," marker, ",(0,r.kt)("inlineCode",{parentName:"p"},"|"),". This allows us to have more than one line of text in a row that is part of the same field. Text that follows the ",(0,r.kt)("inlineCode",{parentName:"p"},"line continuation")," marker is always indented. Usually, we use two spaces as indentation."),(0,r.kt)("p",null,"We also introduce the ",(0,r.kt)("inlineCode",{parentName:"p"},"subquestion")," specifier. A ",(0,r.kt)("inlineCode",{parentName:"p"},"subquestion")," is displayed in a smaller font than the main ",(0,r.kt)("inlineCode",{parentName:"p"},"question")," text."),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Mako")," ",(0,r.kt)("inlineCode",{parentName:"p"},"if")," statement is written on its own line. Notice that the line ",(0,r.kt)("em",{parentName:"p"},"must")," end in a ",(0,r.kt)("inlineCode",{parentName:"p"},":"),". Also notice that when we check the value of a variable, we need to use a double ",(0,r.kt)("inlineCode",{parentName:"p"},"=="),", not ",(0,r.kt)("inlineCode",{parentName:"p"},"="),". We also need to tell Docassemble when the optional text ends and the main text starts back up with the ",(0,r.kt)("inlineCode",{parentName:"p"},"endif")," keyword."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Note"),":  ",(0,r.kt)("a",{parentName:"p",href:"/legal-tech-class/docs/yaml"},"YAML")," is picky about indentation. If you run into an error, check to make sure each line is indented the same way as the example above.")),(0,r.kt)("h2",{id:"your-assignment"},"Your assignment"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Modify the Hello, World exercise so that it ask for the user's first and last names separately.")),(0,r.kt)("h2",{id:"turning-in-your-work"},"Turning in your work"),(0,r.kt)("p",null,'Please use the course Blackboard to turn in your work this week. I would like you to provide me a link so that I can run your interview, and a copy of the interview code. To obtain the link, use the green "Share" button. Right-click and Copy link. Use the "Download" button to download a copy of your YAML. Turn both of these in by 5:30 PM on Wednesday.'))}h.isMDXComponent=!0}}]);